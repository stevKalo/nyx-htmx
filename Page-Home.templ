package main

templ PageHome() {
	@RootLayout("Home") {
		<main class="bg-slate-900 text-slate-950 w-full pt-20 min-h-screen gap-2 flex flex-col items-center justify-start">
			@MessageBox()
		</main>
	}
}

templ MessageBox() {
	<section
		id="messageBox"
		hx-trigger="load"
		hx-post="/welcome"
		hx-swap="beforeend"
		class="bg-slate-800 w-full h-120 max-w-md p-4 flex flex-col gap-4 overflow-y-scroll overflow-x-hidden"
	>
		{ children... }
	</section>
}

templ Welcome() {
        @NyxMessage("Hello, my name is Nyx. People like to tell me messages, would you like to hear one?")
		@UserChoice("/listen")
}

templ NyxMessage(message string) {
	<article
		class="bg-slate-900 text-indigo-300 w-fit p-2 px-4 animate-slide-in-right ml-0 mr-8 self-start"
	>
		{ message }
	</article>
}

templ VoidMessage(message string) {
	<article
		hx-trigger="load"
		hx-post="/offer"
		hx-swap="beforeend"
		hx-target="#messageBox"
		class="bg-slate-900 text-fuchsia-300 w-fit p-2 px-4 animate-slide-in-right ml-0 mr-8 self-start"
	>
		{ message }
	</article>
}

templ UserMessage(message string) {
	<article class="bg-slate-900 text-slate-200 p-2 px-4 animate-slide-in-left ml-8 mr-0 w-fit self-end">
		{ message }
	</article>
}
 
templ UserChoice(endpoint string) {
	<div hx-swap-oob="afterend:#messageBox">
		<form
			hx-on::after-request="this.remove()"
			class="grid grid-cols-2 gap-2 max-w-md w-full animate-fade-up"
		>
			<button
				id="yes"
				name="answer"
				value="Yes"
				hx-post={ endpoint }
				hx-target="#messageBox"
				hx-swap="beforeend"
				class="bg-slate-800 text-slate-200 p-2 px-4 hover:bg-slate-200 hover:text-slate-800"
			>
				Yes
			</button>
			<button
				id="no"
				name="answer"
				value="No"
				hx-post={ endpoint }
				hx-target="#messageBox"
				hx-swap="beforeend"
				class="bg-slate-800 text-slate-200 p-2 px-4 hover:bg-slate-200 hover:text-slate-800"
			>
				No
			</button>
		</form>
	</div>
}

templ UserInput() {
	<div hx-swap-oob="afterend:#messageBox">
		<form
			hx-post="/submit"
			hx-target="#messageBox"
			hx-swap="beforeend"
			hx-on::after-request="this.remove()"
			class="flex flex-row gap-2 max-w-md w-full animate-fade-up"
		>
			<input
				autofocus
				id="userInput"
				name="userInput"
				type="text"
				minlength="1"
				maxlength="500"
				class="bg-slate-800 text-slate-200 p-2 px-4 w-full outline-none border-none caret"
				placeholder="Send a message..."
				oninput="this.form.querySelector('button').disabled = !this.value.trim()"
			/>
			<button
				id="submitButton"
				type="submit"
				disabled
				class="bg-indigo-600 text-slate-200 p-2 px-4 duration-150 transition hover:brightness-125 disabled:opacity-50 relative"
			>
				<div class="htmx-indicator absolute inset-0 bg-indigo-600 flex items-center justify-center">
					@Loading("24")
				</div>
				@UpArrow("24")
			</button>
		</form>
	</div>
}

templ UpArrow(size string) {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width={ size }
		height={ size }
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-arrow-up-icon lucide-arrow-up"
	>
		<path d="m5 12 7-7 7 7"></path>
		<path d="M12 19V5"></path>
	</svg>
}

templ Loading(size string) {
	<svg
		id="loading"
		xmlns="http://www.w3.org/2000/svg"
		width={ size }
		height={ size }
		viewBox="0 0 200 200"
	>
		<linearGradient id="a11">
			<stop offset="0" stop-color="#FFFFFF" stop-opacity="0"></stop>
			<stop offset="1" stop-color="#FFFFFF"></stop>
		</linearGradient>
		<circle
			fill="none"
			stroke="url(#a11)"
			stroke-width="30"
			stroke-linecap="round"
			stroke-dasharray="0 44 0 44 0 44 0 44 0 360"
			cx="100"
			cy="100"
			r="70"
			transform-origin="center"
		>
			<animateTransform
				type="rotate"
				attributeName="transform"
				calcMode="discrete"
				dur=".8"
				values="360;324;288;252;216;180;144;108;72;36"
				repeatCount="indefinite"
			></animateTransform>
		</circle>
	</svg>
}
